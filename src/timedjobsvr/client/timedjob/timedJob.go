// Code generated by goctl. DO NOT EDIT.
// Source: timedjob.proto

package timedjob

import (
	"context"

	"github.com/i-Things/things/src/timedjobsvr/internal/svc"
	"github.com/i-Things/things/src/timedjobsvr/pb/timedjob"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = timedjob.Request
	Response = timedjob.Response

	TimedJob interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultTimedJob struct {
		cli zrpc.Client
	}

	directTimedJob struct {
		svcCtx *svc.ServiceContext
		svr    timedjob.TimedJobServer
	}
)

func NewTimedJob(cli zrpc.Client) TimedJob {
	return &defaultTimedJob{
		cli: cli,
	}
}

func NewDirectTimedJob(svcCtx *svc.ServiceContext, svr timedjob.TimedJobServer) TimedJob {
	return &directTimedJob{
		svr:    svr,
		svcCtx: svcCtx,
	}
}

func (m *defaultTimedJob) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := timedjob.NewTimedJobClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

func (d *directTimedJob) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	return d.svr.Ping(ctx, in)
}
