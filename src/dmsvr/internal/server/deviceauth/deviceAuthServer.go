// Code generated by goctl. DO NOT EDIT.
// Source: dm.proto

package server

import (
	"context"

	"github.com/i-Things/things/src/dmsvr/internal/logic/deviceauth"
	"github.com/i-Things/things/src/dmsvr/internal/svc"
	"github.com/i-Things/things/src/dmsvr/pb/dm"
)

type DeviceAuthServer struct {
	svcCtx *svc.ServiceContext
	dm.UnimplementedDeviceAuthServer
}

func NewDeviceAuthServer(svcCtx *svc.ServiceContext) *DeviceAuthServer {
	return &DeviceAuthServer{
		svcCtx: svcCtx,
	}
}

// 设备登录认证
func (s *DeviceAuthServer) LoginAuth(ctx context.Context, in *dm.LoginAuthReq) (*dm.Response, error) {
	l := deviceauthlogic.NewLoginAuthLogic(ctx, s.svcCtx)
	return l.LoginAuth(in)
}

// 设备操作认证
func (s *DeviceAuthServer) AccessAuth(ctx context.Context, in *dm.AccessAuthReq) (*dm.Response, error) {
	l := deviceauthlogic.NewAccessAuthLogic(ctx, s.svcCtx)
	return l.AccessAuth(in)
}

// 鉴定是否是root账号
func (s *DeviceAuthServer) RootCheck(ctx context.Context, in *dm.RootCheckReq) (*dm.Response, error) {
	l := deviceauthlogic.NewRootCheckLogic(ctx, s.svcCtx)
	return l.RootCheck(in)
}

// 设备动态注册
func (s *DeviceAuthServer) DeviceRegister(ctx context.Context, in *dm.DeviceRegisterReq) (*dm.DeviceRegisterResp, error) {
	l := deviceauthlogic.NewDeviceRegisterLogic(ctx, s.svcCtx)
	return l.DeviceRegister(in)
}
